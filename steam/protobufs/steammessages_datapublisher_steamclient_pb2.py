# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: steam/protobufs/steammessages_datapublisher_steamclient.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from steam.protobufs import steammessages_unified_base_steamclient_pb2 as steam_dot_protobufs_dot_steammessages__unified__base__steamclient__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='steam/protobufs/steammessages_datapublisher_steamclient.proto',
  package='',
  syntax='proto2',
  serialized_options=_b('\200\001\001'),
  serialized_pb=_b('\n=steam/protobufs/steammessages_datapublisher_steamclient.proto\x1a<steam/protobufs/steammessages_unified_base_steamclient.proto\"\xfd\x03\n9CDataPublisher_ClientContentCorruptionReport_Notification\x12\r\n\x05\x61ppid\x18\x01 \x01(\r\x12\x0f\n\x07\x64\x65potid\x18\x02 \x01(\r\x12\x39\n\x0f\x64ownload_source\x18\x03 \x01(\tB \x82\xb5\x18\x1chost name of download source\x12.\n\x08objectid\x18\x04 \x01(\tB\x1c\x82\xb5\x18\x18\x43hunk SHA or Manifest ID\x12\"\n\x06\x63\x65llid\x18\x05 \x01(\rB\x12\x82\xb5\x18\x0e\x43lient Cell ID\x12>\n\x0bis_manifest\x18\x06 \x01(\x08\x42)\x82\xb5\x18%The object is a manifest, not a chunk\x12-\n\x0bobject_size\x18\x07 \x01(\x04\x42\x18\x82\xb5\x18\x14object size in bytes\x12\x37\n\x0f\x63orruption_type\x18\x08 \x01(\rB\x1e\x82\xb5\x18\x1aSee EContentCorruptionType\x12-\n\nused_https\x18\t \x01(\x08\x42\x19\x82\xb5\x18\x15the request was HTTPS\x12:\n\x11oc_proxy_detected\x18\n \x01(\x08\x42\x1f\x82\xb5\x18\x1b\x64\x65tected an OpenCache proxy\"c\n(CValveHWSurvey_GetSurveySchedule_Request\x12\x17\n\x0fsurveydatetoken\x18\x01 \x01(\t\x12\x1e\n\x16surveydatetokenversion\x18\x02 \x01(\x06\"d\n)CValveHWSurvey_GetSurveySchedule_Response\x12\x17\n\x0fsurveydatetoken\x18\x01 \x01(\r\x12\x1e\n\x16surveydatetokenversion\x18\x02 \x01(\x06\x32\xa2\x01\n\rDataPublisher\x12h\n\x1d\x43lientContentCorruptionReport\x12:.CDataPublisher_ClientContentCorruptionReport_Notification\x1a\x0b.NoResponse\x1a\'\x82\xb5\x18#Data Publisher (DP) server services2\xac\x01\n\rValveHWSurvey\x12\x87\x01\n\x11GetSurveySchedule\x12).CValveHWSurvey_GetSurveySchedule_Request\x1a*.CValveHWSurvey_GetSurveySchedule_Response\"\x1b\x82\xb5\x18\x17Should I run the survey\x1a\x11\x82\xb5\x18\rValveHWSurveyB\x03\x80\x01\x01')
  ,
  dependencies=[steam_dot_protobufs_dot_steammessages__unified__base__steamclient__pb2.DESCRIPTOR,])




_CDATAPUBLISHER_CLIENTCONTENTCORRUPTIONREPORT_NOTIFICATION = _descriptor.Descriptor(
  name='CDataPublisher_ClientContentCorruptionReport_Notification',
  full_name='CDataPublisher_ClientContentCorruptionReport_Notification',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='appid', full_name='CDataPublisher_ClientContentCorruptionReport_Notification.appid', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='depotid', full_name='CDataPublisher_ClientContentCorruptionReport_Notification.depotid', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='download_source', full_name='CDataPublisher_ClientContentCorruptionReport_Notification.download_source', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\202\265\030\034host name of download source'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='objectid', full_name='CDataPublisher_ClientContentCorruptionReport_Notification.objectid', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\202\265\030\030Chunk SHA or Manifest ID'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='cellid', full_name='CDataPublisher_ClientContentCorruptionReport_Notification.cellid', index=4,
      number=5, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\202\265\030\016Client Cell ID'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='is_manifest', full_name='CDataPublisher_ClientContentCorruptionReport_Notification.is_manifest', index=5,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\202\265\030%The object is a manifest, not a chunk'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='object_size', full_name='CDataPublisher_ClientContentCorruptionReport_Notification.object_size', index=6,
      number=7, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\202\265\030\024object size in bytes'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='corruption_type', full_name='CDataPublisher_ClientContentCorruptionReport_Notification.corruption_type', index=7,
      number=8, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\202\265\030\032See EContentCorruptionType'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='used_https', full_name='CDataPublisher_ClientContentCorruptionReport_Notification.used_https', index=8,
      number=9, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\202\265\030\025the request was HTTPS'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='oc_proxy_detected', full_name='CDataPublisher_ClientContentCorruptionReport_Notification.oc_proxy_detected', index=9,
      number=10, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\202\265\030\033detected an OpenCache proxy'), file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=128,
  serialized_end=637,
)


_CVALVEHWSURVEY_GETSURVEYSCHEDULE_REQUEST = _descriptor.Descriptor(
  name='CValveHWSurvey_GetSurveySchedule_Request',
  full_name='CValveHWSurvey_GetSurveySchedule_Request',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='surveydatetoken', full_name='CValveHWSurvey_GetSurveySchedule_Request.surveydatetoken', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='surveydatetokenversion', full_name='CValveHWSurvey_GetSurveySchedule_Request.surveydatetokenversion', index=1,
      number=2, type=6, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=639,
  serialized_end=738,
)


_CVALVEHWSURVEY_GETSURVEYSCHEDULE_RESPONSE = _descriptor.Descriptor(
  name='CValveHWSurvey_GetSurveySchedule_Response',
  full_name='CValveHWSurvey_GetSurveySchedule_Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='surveydatetoken', full_name='CValveHWSurvey_GetSurveySchedule_Response.surveydatetoken', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='surveydatetokenversion', full_name='CValveHWSurvey_GetSurveySchedule_Response.surveydatetokenversion', index=1,
      number=2, type=6, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=740,
  serialized_end=840,
)

DESCRIPTOR.message_types_by_name['CDataPublisher_ClientContentCorruptionReport_Notification'] = _CDATAPUBLISHER_CLIENTCONTENTCORRUPTIONREPORT_NOTIFICATION
DESCRIPTOR.message_types_by_name['CValveHWSurvey_GetSurveySchedule_Request'] = _CVALVEHWSURVEY_GETSURVEYSCHEDULE_REQUEST
DESCRIPTOR.message_types_by_name['CValveHWSurvey_GetSurveySchedule_Response'] = _CVALVEHWSURVEY_GETSURVEYSCHEDULE_RESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

CDataPublisher_ClientContentCorruptionReport_Notification = _reflection.GeneratedProtocolMessageType('CDataPublisher_ClientContentCorruptionReport_Notification', (_message.Message,), dict(
  DESCRIPTOR = _CDATAPUBLISHER_CLIENTCONTENTCORRUPTIONREPORT_NOTIFICATION,
  __module__ = 'steam.protobufs.steammessages_datapublisher_steamclient_pb2'
  # @@protoc_insertion_point(class_scope:CDataPublisher_ClientContentCorruptionReport_Notification)
  ))
_sym_db.RegisterMessage(CDataPublisher_ClientContentCorruptionReport_Notification)

CValveHWSurvey_GetSurveySchedule_Request = _reflection.GeneratedProtocolMessageType('CValveHWSurvey_GetSurveySchedule_Request', (_message.Message,), dict(
  DESCRIPTOR = _CVALVEHWSURVEY_GETSURVEYSCHEDULE_REQUEST,
  __module__ = 'steam.protobufs.steammessages_datapublisher_steamclient_pb2'
  # @@protoc_insertion_point(class_scope:CValveHWSurvey_GetSurveySchedule_Request)
  ))
_sym_db.RegisterMessage(CValveHWSurvey_GetSurveySchedule_Request)

CValveHWSurvey_GetSurveySchedule_Response = _reflection.GeneratedProtocolMessageType('CValveHWSurvey_GetSurveySchedule_Response', (_message.Message,), dict(
  DESCRIPTOR = _CVALVEHWSURVEY_GETSURVEYSCHEDULE_RESPONSE,
  __module__ = 'steam.protobufs.steammessages_datapublisher_steamclient_pb2'
  # @@protoc_insertion_point(class_scope:CValveHWSurvey_GetSurveySchedule_Response)
  ))
_sym_db.RegisterMessage(CValveHWSurvey_GetSurveySchedule_Response)


DESCRIPTOR._options = None
_CDATAPUBLISHER_CLIENTCONTENTCORRUPTIONREPORT_NOTIFICATION.fields_by_name['download_source']._options = None
_CDATAPUBLISHER_CLIENTCONTENTCORRUPTIONREPORT_NOTIFICATION.fields_by_name['objectid']._options = None
_CDATAPUBLISHER_CLIENTCONTENTCORRUPTIONREPORT_NOTIFICATION.fields_by_name['cellid']._options = None
_CDATAPUBLISHER_CLIENTCONTENTCORRUPTIONREPORT_NOTIFICATION.fields_by_name['is_manifest']._options = None
_CDATAPUBLISHER_CLIENTCONTENTCORRUPTIONREPORT_NOTIFICATION.fields_by_name['object_size']._options = None
_CDATAPUBLISHER_CLIENTCONTENTCORRUPTIONREPORT_NOTIFICATION.fields_by_name['corruption_type']._options = None
_CDATAPUBLISHER_CLIENTCONTENTCORRUPTIONREPORT_NOTIFICATION.fields_by_name['used_https']._options = None
_CDATAPUBLISHER_CLIENTCONTENTCORRUPTIONREPORT_NOTIFICATION.fields_by_name['oc_proxy_detected']._options = None

_DATAPUBLISHER = _descriptor.ServiceDescriptor(
  name='DataPublisher',
  full_name='DataPublisher',
  file=DESCRIPTOR,
  index=0,
  serialized_options=_b('\202\265\030#Data Publisher (DP) server services'),
  serialized_start=843,
  serialized_end=1005,
  methods=[
  _descriptor.MethodDescriptor(
    name='ClientContentCorruptionReport',
    full_name='DataPublisher.ClientContentCorruptionReport',
    index=0,
    containing_service=None,
    input_type=_CDATAPUBLISHER_CLIENTCONTENTCORRUPTIONREPORT_NOTIFICATION,
    output_type=steam_dot_protobufs_dot_steammessages__unified__base__steamclient__pb2._NORESPONSE,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_DATAPUBLISHER)

DESCRIPTOR.services_by_name['DataPublisher'] = _DATAPUBLISHER


_VALVEHWSURVEY = _descriptor.ServiceDescriptor(
  name='ValveHWSurvey',
  full_name='ValveHWSurvey',
  file=DESCRIPTOR,
  index=1,
  serialized_options=_b('\202\265\030\rValveHWSurvey'),
  serialized_start=1008,
  serialized_end=1180,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetSurveySchedule',
    full_name='ValveHWSurvey.GetSurveySchedule',
    index=0,
    containing_service=None,
    input_type=_CVALVEHWSURVEY_GETSURVEYSCHEDULE_REQUEST,
    output_type=_CVALVEHWSURVEY_GETSURVEYSCHEDULE_RESPONSE,
    serialized_options=_b('\202\265\030\027Should I run the survey'),
  ),
])
_sym_db.RegisterServiceDescriptor(_VALVEHWSURVEY)

DESCRIPTOR.services_by_name['ValveHWSurvey'] = _VALVEHWSURVEY

# @@protoc_insertion_point(module_scope)
